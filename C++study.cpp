#include<iostream>
#include<string>
using namespace std;

//对象的初始化和清理
//构造函数和析构函数 一个是初始化 一个是清理
//这两个函数是由编译器自动调用
/*
构造函数语法： 类名（）｛｝
1.没有返回值也不写void
2.函数名称与类名相同
3.构造函数可以有参数，因此可以发生重载
4.程序在调用对象的时候会自动调用构造，无须手动调用，且只会调用一次
*/

/*
析构函数~类名（）｛｝
1.没有返回值也不写void
2.函数名称与类名相同，在名词前加上符号~
3.析构函数不可以有参数，因此不可以发生重载
4.程序在对象销毁前会自动调用析构，无需手动调用，而且只会调用一次
*/

class person
{
public:
	person()
	{
		cout << "调用构造函数" << endl;
	}

	~person()
	{
		cout << "调用析构函数" << endl;
	}

};
//构造函数和析构函数的实现

void test01()
{
	person p1;//变量创建在栈区，函数调用结束后会自动释放
}

int main()
{
	person p1;//不会调用析构函数，因为下一行执行pause语句时会暂停，变量并未释放
	//test01();//会调用析构函数
	system("pause");
	return 0;
}
